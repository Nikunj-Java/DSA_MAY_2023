***************************************************************************************************************
BASIC OF COMPUTER PROGRAMMING LANGUAGE
***************************************************************************************************************

VARIABLE:
--------------

	- whose value van be varied and not fixed everytime
	- whenever you try to work with with some program yoou required to take input from user to process the input and generate Output
	- for that we declare variables
	- it store the value and you can process the same;

INDENTIFIER:
---------------
	- to identify a variable created  , we required intendifier
	- we can say that name of variable
	- to name the variable we need to follow some set of rules.

RULEs:
---------------
	1. varibale name can't start with a number (1num -----> it is not valid)
	2. it can be an alphanumeric (num1--------> it is valid)
	3. No Special characters are allowed (.,@#%& / space etc..)
	4. Only _(underscore) and $ (dollar) you can use while giving the varibale name.
	5. it can't be more than 255 character long.
	6. naming convension: first letter should be in lowercase. if it contains more than one letter like words then first letter we can keep small and rest words starting letter we can keet it as capital
		eg: 1. First Name:    firstName
		eg: 2. Middle Name:   middleName
		eg: 3. Last Name:     lastName
		eg: 4. Mobile Number: mobileNo 

					OR

		eg: 1. First Name:    first_Name
		eg: 2. Middle Name:   middle_Name
		eg: 3. Last Name:     last_Name
		eg: 4. Mobile Number: mobile_No
	7. we should not give the name of variable with reserved KEYWORDS

KEYWORDS :
----------------

- A specific keyword(name) which are basicaaly used to write code in the programming language.
- like if, else,switch,includes.int,float,boolean,double,char, etc..,


***************************************************************************************************************
DATA TYPES
***************************************************************************************************************

- whenever you try to store your data, your memory must assign a memory size to that variable, it can store value inside the same, that you can define the type of your data. That means you data can be a 
		number(12), 
		text("welcome to SimpliLearn"), 
		single character('A'), 
		or boolean data type( True or False)

1. WHOLE NUMBER (0,1,2,3,4,5,6......): it can be zero or possitive:------>  int

2. DECIMAL NUMBER (1.2, 4.6, 7.9) : it can be  negative or positive or zero but with floating points:---> float

3. SINGLE CHARACTER('a', 'b' ,'l' ,'p') : -----> char

4. TEXT - Sequence of characters ("NIKUNJ)- Array of char:----> String

5. SINGLE BIT VALUE ( 0 or 1): 

	0-----> False
	1-----> True


***************************************************************************************************************
SYNTAX:
***************************************************************************************************************
LANGUAGE: C


#include <stdio.h>


int main(){

		printf("Hello World From: SimpliLearn");
}


---------------------------------------------------------------

#include :  includes the library mentioned inside angle brackets, that means if you want to use library then take  the permission from the  same and start using  its function
		like:  #include <stdio.h>

-stdio.h : it is the library which provides function related to  standard input and output.

-int main(){ //program here } : called as main function ( from where the program starts its execution)


- int : it is return type, that means when function executed it return some value

- main: it is the name of method name where () says no parameter required to run this function

- if you want to pass parameters the function look like this
	--------------------------------------------------------
	int main(int a, int b){

			return a+b;
		}
	--------------------------------------------------------
-{} Called as a block of code where you can write statements for your logic

- printf: is the function available in "stdio.h" library which is used to display some value as an output

- each statement must ends with semicolon (;)